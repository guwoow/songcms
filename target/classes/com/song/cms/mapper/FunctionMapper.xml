<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.song.cms.mapper.FunctionMapper" >
  <resultMap id="BaseResultMap" type="com.song.cms.model.Function" >
    <id column="function_id" property="functionId" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="ico" property="ico" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="is_enable" property="isEnable" jdbcType="BIT" />
    <result column="add_date" property="addDate" jdbcType="TIMESTAMP" />
    <result column="sequence" property="sequence" jdbcType="INTEGER" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    function_id, parent_id, name, code, url, ico, level, is_delete, is_enable, add_date, 
    sequence, summary
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.song.cms.model.FunctionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from function
    where function_id = #{functionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from function
    where function_id = #{functionId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.song.cms.model.FunctionExample" >
    delete from function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.song.cms.model.Function" >
    insert into function (function_id, parent_id, name, 
      code, url, ico, level, 
      is_delete, is_enable, add_date, 
      sequence, summary)
    values (#{functionId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{ico,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=BIT}, #{isEnable,jdbcType=BIT}, #{addDate,jdbcType=TIMESTAMP}, 
      #{sequence,jdbcType=INTEGER}, #{summary,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.song.cms.model.Function" >
    insert into function
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="functionId != null" >
        function_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="ico != null" >
        ico,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="addDate != null" >
        add_date,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="summary != null" >
        summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="functionId != null" >
        #{functionId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="ico != null" >
        #{ico,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=BIT},
      </if>
      <if test="addDate != null" >
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.song.cms.model.FunctionExample" resultType="java.lang.Integer" >
    select count(*) from function
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update function
    <set >
      <if test="record.functionId != null" >
        function_id = #{record.functionId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.ico != null" >
        ico = #{record.ico,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.isEnable != null" >
        is_enable = #{record.isEnable,jdbcType=BIT},
      </if>
      <if test="record.addDate != null" >
        add_date = #{record.addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update function
    set function_id = #{record.functionId,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      ico = #{record.ico,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=BIT},
      is_enable = #{record.isEnable,jdbcType=BIT},
      add_date = #{record.addDate,jdbcType=TIMESTAMP},
      sequence = #{record.sequence,jdbcType=INTEGER},
      summary = #{record.summary,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.cms.model.Function" >
    update function
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="ico != null" >
        ico = #{ico,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=BIT},
      </if>
      <if test="addDate != null" >
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=INTEGER},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
    </set>
    where function_id = #{functionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.cms.model.Function" >
    update function
    set parent_id = #{parentId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      ico = #{ico,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIT},
      is_enable = #{isEnable,jdbcType=BIT},
      add_date = #{addDate,jdbcType=TIMESTAMP},
      sequence = #{sequence,jdbcType=INTEGER},
      summary = #{summary,jdbcType=VARCHAR}
    where function_id = #{functionId,jdbcType=VARCHAR}
  </update>
</mapper>